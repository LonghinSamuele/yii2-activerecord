<?php

namespace samuelelonghin\db;

use Da\QrCode\QrCode;
use samuelelonghin\qr\ModelSerializable;
use Yii;
use yii\base\Exception;

/**
 * @property string $id
 * @property QrCode $qr
 * @property string $qrSvg
 */
abstract class ActiveRecord extends \yii\db\ActiveRecord implements IGridActiveRecord
{
    use ModelSerializable;

    /**
     * @return ActiveQuery
     */
    public static function find()
    {
        return new ActiveQuery(static::class);
    }

    /**
     * @throws Exception
     */
    public function beforeValidate()
    {
        if ($this->isNewRecord && !$this->id)
            $this->generateId();
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws Exception
     */
    public function beforeSave($insert)
    {
        if ($this->isNewRecord && !$this->id)
            $this->generateId();
        return parent::beforeSave($insert);
    }

    /**
     * @throws Exception
     */
    public function generateId()
    {
        do {
            $lunghezza = Yii::$app->activerecord->getStringIdLenght();
            $id = Yii::$app->security->generateRandomString($lunghezza);
        } while (self::findOne($id));
        $this->id = $id;
        return true;
    }

    /**
     * @param string $class
     * @param array $link
     * @return ActiveQuery
     */
    public function hasMany($class, $link)
    {
        return parent::hasMany($class, $link);
    }

    /**
     * @param string $class
     * @param array $link
     * @return ActiveQuery
     */
    public function hasOne($class, $link)
    {
        return parent::hasOne($class, $link);
    }

    public static function queryFrom()
    {
        return null;
    }
}
